###################################
#####   Useful python hints   #####
###################################



-------------- Python Launcher - Selecting python version, listing available pythons --------------------
If you have more than one version of python installed, use python launcher ('py') to select the one you want.
# See help of python launcher
py --help
# List installed pythons. Note that the '*' indicates the default python used when no version is specified during a python call.
py --list
# Or list them using following command, which will also provide their installation directories
py -0p
# Call your python script with python 2 (assuming python 2 is installed)
py -2 <your-python-script>
# Call your python script with python 3 (assuming python 3 is installed)
py -3 <your-python-script>
# Call your python script with particular version of python (in this case: 3.9 - assuming you have it installed)
py -3.9 <your-python-script>

---------------------------------------------------------------------------------------------------------



-------------- virtual environment (venv) --------------------
1. Create virtual environment
py -m venv <name-of-venv>
The directory wth name <name-of-venv> will be created and initial virtual environment files will be created there.

2. Activate virtual environment
cd <name-of-venv>\Scripts
activate.bat
Now in the console the name of the virtual env will be displayed near the prompt.

3. Deactivate virtual environment
cd <name-of-venv>\Scripts
deactivate.bat

4. Info about usage of virtual env
When you have the virtual env activated, please call python from within it.
I.e.: 
<your-virtual-env-name>\Scripts\python.exe <name-of-the-py-script-to-call>
This should assure that you use the python and packages from within virtual env.
It would be good to use pip also from this location when installing or uninstalling packages.
Installed packages shall fall into:
<your-virtual-env-name>\Lib\site-packages
TIP: <your-virtual-env-name>\pyvenv.cfg holds info from what python version the virtual env has been created

4. Moving virtual env between different computers
Upon moving the virtual env to a new computer or new location, you have to edit some paths within it.
Otherwise it will try to use its previous location and you may encounter error like 'ModuleNotFound' and so on.
The following has to be done after moving to a new location:
- delete <your-virtual-env-name>\Lib\site-packages\__pycache__ directory
- edit the <your-virtual-env-name>\Scripts\activate - update paths that will match the new location of your virtual env
- edit the <your-virtual-env-name>\Scripts\activate.bat - update paths that will match the new location of your virtual env
- edit the <your-virtual-env-name>\Scripts\jp.py - update paths that will match the new location of your virtual env

---------------------------------------------------------------------------------------------------------



-------------- Installing packets --------------------
# package manager help
pip --help

#  Install package of a given <package-name>
pip install <package-name>

#  Install package of a given <package-name> and particular version
pip install <package-name>==<desired-package-version>

#  Uninstall package of a given <package-name>
pip uninstall <package-name>

---------------------------------------------------------------------------------------------------------
