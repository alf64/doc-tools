#############################
###   EA - UML - faq      ###
#############################


EA          = Enterprise Architect
UML         = Unified Modelling Language


--- 3 views that describe the system ---
1. Object model         --->   Class Diagrams
2. Interaction Model    --->   Activity Diagrams, Sequence Diagrams, Communication/Interaction Diagrams
3. Dynamic Model        --->   State Machine Diagrams



--- Class Diagrams ---
A class has:
 - data (attributes)
 - functionality (operations)



--- Sequence Diagrams ---
 - describe interaction between objects
 - client - server type of relationship
 - shows interactions (in order)
 - implement 'Use Cases' (show usages)



--- State Machine Diagrams ---
 - specify the dynamic behavior of a model
 - system can demonstrate different behavior depending on the state it is in
 - each class with more than 1 state should have its own state machine diagram
 - State Model consists of State Machine Diagrams



--- Possible Diagrams ---
* Common relationship diagram
* High Level Overview:
 - Package diagrams
 - Use Case diagrams
 - Component diagrams
 - Deployment diagrams
* Structure:
 - Class diagrams
* Interaction - Behaviour
 - Sequence diagrams
 - Activity diagrams
* State:
 - State Machine diagrams



--- Common reliationships between objects in UML ---
* Association                       - 'This' is associated with 'that'              - i.e. 'Computer' is associated with 'Software'.
* Dependency                        - 'This' depends on 'that'. “Needs a..”         - i.e. 'Computer' depends on 'Power Supply'.
* Realization                       - 'This' realizes 'that'. “Implements a..”      - i.e. 'Computer' realizes some 'interface/API'.
* Generalization                    - 'This' extends 'that'. “Is a..”               - i.e. 'Keyboard' generalizes/"is a" 'I/O Device'.
* Aggregation                       - 'This' owns 'that'. "Has a.."                 - i.e. 'Computer' aggregates/"has a" 'I/O Device'.
* Composition (strong aggregation)  - 'This' is composed of 'that'. "Requires a..." - i.e. 'Computer' composes of a 'Processor'.

In programming terms, Aggregation is usually used to mark that one class owns the other (uses an object of it). I.e.: 'Class1' <>--- aggregates --- 'Class2'
<>      - is a unfilled diamond shape. Used in: Aggregation and Composition.
->      - is an arrow shape. Used in: Dependency, Realization and Generalization.
-       - just a line without shapes. Used in: Association.
Examples:
'Computer'      <>--- aggregates -----      'Keyboard'
'Computer'      <>--- aggregates -----      'I/O Device'
'Computer'      <>--- composes of -----     'Processor'
'Keyboard'      ----- generalizes ---->     'I/O Device'
'Computer'      ----- associates -----      'Software'
'Computer'      ----- realizes ---->        'Interface/API'
'Computer'      ----- depends on ---->      'Power Suply'



--- Software Design Levels in NS ---
Below are design types used in NS and what ASPICE aspects they cover
Struct Design       ---> covers SWE2 (High-Level Design)
Layer Design        ---> covers SWE2 (High-Level Design)
Module Design       ---> covers SWE3 (Low-Level Design)



--- Basic artifacts terminology ---
Component           = folder
Module              = file (.c, .h)
SW Unit             = function
The hierarchy is as follows (from highest to lowest):
Component ---> Module ---> SW Unit



--- How to relate diagrams to artifacts ---
Class diagrams      = class diagrams are created per module (a pair of: .c, .h)
Activity diagram    = activity diagrams are created per C functions
Sequence diagrams   = should probably be created per use case (multiple functions call in particular order for specific purpose)



--- V-model ---
V-model is a kind of system development lifecycle, methodology of work
The number of levels may depend of the V-model implementation, can be company specific.
Example V-model:
SWE1 (Software Requirements) -------------------------------------> SWE6 (Software Requirements Tests)
    SWE2 (High Level Software Design) ------------------------> SWE5 (High Level Software Tests)
        SWE3 (Low Level Software Design) ------------------> SWE4 (Low Level Software Tests)
                                             - Coding -
                                             
The left side of V-model is called: Verification Phase.
The right side of V-model is called: Validation Phase.
Each validation part tests its verification part, i.e. SWE5 performs tests of SWE2.



--- EA hotkeys ---
Ctrl + F                                                            ---> Opens 'Find in Project' view where you can search for different things within a project.
Ctrl + Left Mouse Button Click                                      ---> Click this way on objects to select multiple of them.
Ctrl + U                                                            ---> Find usages of a selected object in project tree in all diagrams.
Alt + G                                                             ---> Find object origins in project tree (first click on this object on the diagram, then hit the hotkey).
Alt + Shift + G                                                     ---> Find diagram in project tree (first click on the background of the currently opened diagram, then hit the hotkey).
Ctrl + Right Mouse Button Click                                     ---> Opens additional properties dialog for the clicked object. I.e. StateNode Object allows for chaing its graphics between 'initial' and 'final'.
Shift + Left Mouse Button Click <when drawing controlflow line>     ---> Hitting Shift button can make the line 'break', which allows you to make 90 degrees turns.
Ctrl + Delete                                                       ---> Delete the selected element in a diagram from the model.
F11                                                                 ---> Generate code for the selected single element.
Shift+F11                                                           ---> Generate code for all the elements of the selected package.
F12                                                                 ---> View source code for the selected class.
Ctrl+Alt+B                                                          ---> Open Baseline manager for the selected package.



--- EA locks ---
Before making any changes, even basic ones like component name changing, you have to acquire a lock.
Right click on component -> Package Control -> Apply/Release User Lock... -> select: 'Apply' -> OK
To release lock perform the same but select 'Release' instead of 'Apply'
Locks are marked as exclamation marks (!)
Locks are not released when you close EA, you have to release them by yourself.
Administrators contain power of releasing someone's locks.
When someone holds a lock, it is usually red.
Your locks are usually light blue.



--- EA enabling Trace(ability) and Toolbox view ---
'Design' tab ---> Toolbox
'Design' tab ---> Trace
Trace view allows you to check Traceability
Toolbox allows you to create diagrams



--- EA - stereotypes ---
Stereoptype     ---> means any non-standard type in EA, i.e.: Enum



--- EA - diagrams layout ---
There is a way to easily align all of the objects on the diagrams, i.e.:
- for them to be of the same size
- for them to be horizontally & vertically aligned
- for them to be evenly spaced horizontally or vertically
The tools for such kind of alignment are available in EA under its main bar: Layout -> Alignment
Select objects on diagram that you would like to align (hold Ctrl key and left-click on them) and then select the align/layout operation you would like to perform.
Hint: objects are being aligned to the object that was clicked last (it is highlighted a little different than others).



--- EA copying objects (diagrams) between EA instances ---
On your PC you can have multiple instances of EA opened and you can copy diagrams/objects between them (i.e. from one project to another).
When copying diagrams, you would need to copy also its resources (objects that it uses - EA keeps such objects in the project tree alongside the diagram).
Let's say you would like to copy the activity diagram named Diagram1. Do the following:
 - navigate to the first instance of your EA with the project where the Diagram1 exists
 - in the project tree find out the diagram you want to copy (Diagram1)
 - in the project tree find out where the diagram's objects are placed
 - now in the project tree highlight the nearest top folder that contains your Diagram1 and its objects
 - right-click on such folder and select: Copy / Paste -> Copy to Clipboard -> Full Structure for Duplication
 - navigate to the second instance of your EA with the project where the Diagram1 shall be copied to
 - right-click on a folder where you would like to paste the copied content
 - right-click on such folder and select: Copy / Paste -> Paste Package from Clipboard (or Paste Element(s) from Clipboard)
The folder that you have copied probably contains another diagrams and objects that you don't need in the destination. You would need to delete those manually.



--- EA copying (duplicating) objects within diagram ---
If you would like to duplicate some of the objects on your diagram, please do the following:
1. Hold Ctrl and using Left-Mouse-Button click highlight objects
2. Keep holding Ctrl and hold the Left-Mouse-Button on one of the selected objects
3. Move the cursor somewhere where you would like duplicated objects to be created.
4. Let go of the buttons you hold. The pop-up window will be opened telling you which objects are going to be duplicated.
There will be also an option to duplicate the connectors. Click OK and its done.



--- EA 'Find in Project' ---
Upon pressing 'Ctrl + F' in EA, the 'Find in Project' tab will be opened. It allows you to search for things in the project (in all the diagrams, all the objects).
Using 2 dropdown lists you can customize your search. In the 3rd edit box you enter the 'term' (text) to search for.
The deault search is:
* 'Common Searches' : 'Simple'. In the edit box put the text you want to search for and just search for its instances.
Another useful searches:
* 'Diagram Searches' : 'Find Orphans'. Put nothing in the edit box, just search. This will find all the objects that are not used in any diagram.


